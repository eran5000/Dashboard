{
  "version": 3,
  "sources": ["../../vue-chartjs/src/props.ts", "../../vue-chartjs/src/utils.ts", "../../vue-chartjs/src/chart.ts", "../../vue-chartjs/src/typedCharts.ts"],
  "sourcesContent": ["import type { PropType } from 'vue'\nimport type {\n  ChartType,\n  ChartData,\n  ChartOptions,\n  Plugin,\n  UpdateMode\n} from 'chart.js'\n\nexport const CommonProps = {\n  data: {\n    type: Object as PropType<ChartData>,\n    required: true\n  },\n  options: {\n    type: Object as PropType<ChartOptions>,\n    default: () => ({})\n  },\n  plugins: {\n    type: Array as PropType<Plugin[]>,\n    default: () => []\n  },\n  datasetIdKey: {\n    type: String,\n    default: 'label'\n  },\n  updateMode: {\n    type: String as PropType<UpdateMode>,\n    default: undefined\n  }\n} as const\n\nexport const Props = {\n  type: {\n    type: String as PropType<ChartType>,\n    required: true\n  },\n  ...CommonProps\n} as const\n", "import { isProxy, toRaw, version } from 'vue'\nimport type {\n  Chart,\n  ChartType,\n  ChartData,\n  ChartDataset,\n  ChartOptions,\n  DefaultDataPoint\n} from 'chart.js'\n\nexport const compatProps =\n  version[0] === '2'\n    ? <I extends {}, T extends {}>(internals: I, props: T) =>\n        Object.assign(internals, { attrs: props }) as unknown as I & T\n    : <I extends {}, T extends {}>(internals: I, props: T) =>\n        Object.assign(internals, props)\n\nexport function toRawIfProxy<T>(obj: T) {\n  return isProxy(obj) ? toRaw(obj) : obj\n}\n\nexport function cloneProxy<T extends object>(obj: T, src = obj) {\n  return isProxy(src) ? new Proxy(obj, {}) : obj\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions)\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey: string\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = []\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      )\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>\n      }\n\n      addedDatasets.push(currentDataset)\n\n      Object.assign(currentDataset, nextDataset)\n\n      return currentDataset\n    }\n  )\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey: string) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: []\n  }\n\n  setLabels(nextData, data.labels)\n  setDatasets(nextData, data.datasets, datasetIdKey)\n\n  return nextData\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'dataset',\n    { intersect: true },\n    false\n  )\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'nearest',\n    { intersect: true },\n    false\n  )\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'index',\n    { intersect: true },\n    false\n  )\n}\n", "import {\n  defineComponent,\n  ref,\n  shallowRef,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  toRaw\n} from 'vue'\nimport { Chart as ChartJS } from 'chart.js'\nimport type { ChartComponent } from './types.js'\nimport { Props } from './props.js'\nimport {\n  cloneData,\n  setLabels,\n  setDatasets,\n  setOptions,\n  toRawIfProxy,\n  cloneProxy\n} from './utils.js'\n\nexport const Chart = defineComponent({\n  props: Props,\n  setup(props, { expose }) {\n    const canvasRef = ref<HTMLCanvasElement | null>(null)\n    const chartRef = shallowRef<ChartJS | null>(null)\n\n    expose({ chart: chartRef })\n\n    const renderChart = () => {\n      if (!canvasRef.value) return\n\n      const { type, data, options, plugins, datasetIdKey } = props\n      const clonedData = cloneData(data, datasetIdKey)\n      const proxiedData = cloneProxy(clonedData, data)\n\n      chartRef.value = new ChartJS(canvasRef.value, {\n        type,\n        data: proxiedData,\n        options: { ...options },\n        plugins\n      })\n    }\n\n    const destroyChart = () => {\n      const chart = toRaw(chartRef.value)\n\n      if (chart) {\n        chart.destroy()\n        chartRef.value = null\n      }\n    }\n\n    const update = (chart: ChartJS) => {\n      chart.update(props.updateMode)\n    }\n\n    onMounted(renderChart)\n\n    onBeforeUnmount(destroyChart)\n\n    watch(\n      [() => props.options, () => props.data],\n      (\n        [nextOptionsProxy, nextDataProxy],\n        [prevOptionsProxy, prevDataProxy]\n      ) => {\n        const chart = toRaw(chartRef.value)\n\n        if (!chart) {\n          return\n        }\n\n        let shouldUpdate = false\n\n        if (nextOptionsProxy) {\n          const nextOptions = toRawIfProxy(nextOptionsProxy)\n          const prevOptions = toRawIfProxy(prevOptionsProxy)\n\n          if (nextOptions && nextOptions !== prevOptions) {\n            setOptions(chart, nextOptions)\n            shouldUpdate = true\n          }\n        }\n\n        if (nextDataProxy) {\n          const nextLabels = toRawIfProxy(nextDataProxy.labels)\n          const prevLabels = toRawIfProxy(prevDataProxy.labels)\n          const nextDatasets = toRawIfProxy(nextDataProxy.datasets)\n          const prevDatasets = toRawIfProxy(prevDataProxy.datasets)\n\n          if (nextLabels !== prevLabels) {\n            setLabels(chart.config.data, nextLabels)\n            shouldUpdate = true\n          }\n\n          if (nextDatasets && nextDatasets !== prevDatasets) {\n            setDatasets(chart.config.data, nextDatasets, props.datasetIdKey)\n            shouldUpdate = true\n          }\n        }\n\n        if (shouldUpdate) {\n          update(chart)\n        }\n      },\n      { deep: true }\n    )\n\n    return () => {\n      return h('canvas', {\n        ref: canvasRef\n      })\n    }\n  }\n}) as ChartComponent\n", "import { defineComponent, shallowRef, h } from 'vue'\nimport type { ChartType, ChartComponentLike, DefaultDataPoint } from 'chart.js'\nimport {\n  Chart as ChartJS,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController\n} from 'chart.js'\nimport type { TypedChartComponent, ChartComponentRef } from './types.js'\nimport { CommonProps } from './props.js'\nimport { Chart } from './chart.js'\nimport { compatProps } from './utils.js'\n\nexport function createTypedChart<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  type: TType,\n  registerables: ChartComponentLike\n): TypedChartComponent<TType, TData, TLabel> {\n  ChartJS.register(registerables)\n\n  return defineComponent({\n    props: CommonProps,\n    setup(props, { expose }) {\n      const ref = shallowRef<ChartJS | null>(null)\n      const reforwardRef = (chartRef: ChartComponentRef) => {\n        ref.value = chartRef?.chart\n      }\n\n      expose({ chart: ref })\n\n      return () => {\n        return h(\n          Chart,\n          compatProps(\n            {\n              ref: reforwardRef as any\n            },\n            {\n              type,\n              ...props\n            }\n          )\n        )\n      }\n    }\n  }) as any\n}\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController)\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n)\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController)\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController)\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n)\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController)\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n)\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n)\n"],
  "mappings": "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",
  "names": []
}
